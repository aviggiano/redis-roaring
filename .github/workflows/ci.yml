name: CI/CD

on: [push, pull_request, workflow_dispatch]

permissions:
  id-token: write
  contents: read

jobs:
  configure:
    name: Configure project
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure
      run: ./configure.sh
  test:
    name: Test project
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure
      run: ./configure.sh
    - name: Install valgrind
      run: sudo apt-get install valgrind
    - name: Test
      run: ./test.sh
  build_and_push_staging:
    name: Build and push to ECR
    needs: [configure, test]
    if: github.ref != 'refs/heads/master'
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Build and Push Docker Image
        uses: ./.github/actions/build-and-push-docker-image
        with:
          aws_ecr: ${{ vars.AWS_ECR }}
          aws_region: ${{ vars.AWS_REGION }}
          oidc_role: ${{ vars.AWS_GITHUB_OIDC_ROLE }}
  performance:
    name: Performance tests
    needs: [configure, test]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure
        run: ./configure.sh
      - name: Install valgrind
        run: sudo apt-get install valgrind
      - name: Test
        run: ./performance.sh
  build_and_push_production:
    name: Build and push to ECR
    needs: [configure, test, performance]
    if: github.ref == 'refs/heads/master'
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Build and Push Docker Image
        uses: ./.github/actions/build-and-push-docker-image
        with:
          aws_ecr: ${{ vars.AWS_ECR }}
          aws_region: ${{ vars.AWS_REGION }}
          oidc_role: ${{ vars.AWS_GITHUB_OIDC_ROLE }}


